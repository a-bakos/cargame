// For debugging or testing purposes
@mixin debug {
  outline: 1px solid red!important;
  }

// Preventing user selection
@mixin no-select {
  user-select: none;
  }


// Variables

$duration: 1000ms;

$hpc: 100%;   // Hundred percent
$hpx: 100px;  // Hundred pixel


// Colors

$bg-color:            rgba(66,46,47,1);
$main-screen-color:   transparent;

$color-black:         rgba(0,0,0,1);
$color-white:         rgba(255,255,255,1);

$color-red:           rgba(165,0,0,1);
$color-orange:        rgba(254,147,1,1);
$color-light-yellow:  rgb(255,255,159);     // color of the car's front lights

$color-green:         rgb(69,84,27);
$color-mid-green:     rgb(19,27,6);
$color-dark-green:    rgb(19,27,6);

// Lamp post light colors:
$color-lamp-yellow:   rgba(224,94,7,1);
$color-lamp-orange:   rgba(255,180,66,1);

$glass-color:         rgb(5,50,50);         // color of the car's glas
$plate-color:         rgb(245,156,51);      // declared as the plate's text color

$dash-display-bg:     rgb(69,62,61);            // dashboard + msg wall background
$dashboard-text:      rgba(235,159,76,0.95);    // dashboard's text color

/**
 * Let's use interpolation on colors, so they aren't dependent on individual
 * CSS porperties. We are applying RGB colors with an optional opacity value,
 * therefore if opacity is not given, then it falls back to default value, 1,
 * which is not transparent at all.
 */
@mixin white($property_name, $opacity:1) {
  #{$property_name}: rgba(255,255,255,$opacity);
  }
@mixin black($property_name, $opacity:1) {
  #{$property_name}: rgba(0,0,0,$opacity);
  }
@mixin grass-green($property_name, $opacity:1) {
  #{$property_name}: rgba(69,84,27,$opacity);
  }
@mixin warning-yellow($property_name, $opacity:1) {
  #{$property_name}: rgba(249,208,116,$opacity);
  }

@mixin car-color($property_name, $opacity:1) {
  #{$property_name}: rgba(165,0,0,$opacity);
  }
@mixin car-headlights($property_name, $opacity:1) {
  #{$property_name}: rgba(255,255,159,$opacity);
  }
@mixin car-taillights($property_name, $opacity:1) {
  #{$property_name}: rgba(174,0,0,$opacity);
  }
@mixin car-indicators($property_name, $opacity:1) {
  #{$property_name}: rgba(254,147,1,$opacity);
  }


// Fonts

// Main font for license plate
// http://www.dafont.com/zzyzx.font
@font-face {
  font-family: "Zzyzx";
  src: url("fonts/zzyzx.ttf") format("truetype");
  }

// 1st Fallback font for license plate - though it doesn't load on some devices
// http://www.dafont.com/seattle-sans.font
@font-face {
  font-family: "Seattle Sans";
  src: url("fonts/seasans.ttf") format("truetype");
  }

$plate-font:          'Zzyzx', 'Seattle Sans', sans-serif;  // The fontface on the plate
$odometer-font:       'VT323', monospace;                   // Odometer's fontface
$main-display-bold:   'Luckiest Guy', cursive;              // Fancy fat fontface on main scr
$small-heading:       'Teko', sans-serif;                   // 
$general-text:        'Ubuntu Condensed', sans-serif;       // 
